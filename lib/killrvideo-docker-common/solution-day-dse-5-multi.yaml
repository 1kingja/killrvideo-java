version: '3'

#
# docker-compose.yaml
#   Default compose file for providing basic infrastructure required by KillrVideo
#

services:
  # Etcd for our service registry
  etcd:
    image: quay.io/coreos/etcd:v2.3.6
    command: [ -advertise-client-urls, "http://${KILLRVIDEO_DOCKER_IP}:2379", -listen-client-urls, "http://0.0.0.0:2379" ]
    ports:
    # The client port
    - "2379:2379"
    environment:
      SERVICE_2379_NAME: etcd

  # Registrator to register containers with Etcd
  registrator:
    image: gliderlabs/registrator:latest
    # Tell registrator where the etcd HTTP API is and to use the docker VM's IP
    command: [ -ip, "$KILLRVIDEO_DOCKER_IP", "etcd://etcd:2379/killrvideo/services" ]
    volumes:
    # So registrator can use the docker API to inspect containers
    - "/var/run/docker.sock:/tmp/docker.sock"
    depends_on:
    - etcd

  # Start the KillrVideo web UI on port 3000
  web:
    image: killrvideo/killrvideo-web:1.2.7
    ports:
    - "3000:3000"
    depends_on:
    - dse
    - etcd
    environment:
      SERVICE_3000_NAME: web
      KILLRVIDEO_ETCD: "etcd:2379"
      KILLRVIDEO_DSE_USERNAME: $KILLRVIDEO_DSE_USERNAME
      KILLRVIDEO_DSE_PASSWORD: $KILLRVIDEO_DSE_PASSWORD
      KILLRVIDEO_CASSANDRA_REPLICATION: $KILLRVIDEO_CASSANDRA_REPLICATION
      KILLRVIDEO_LOGGING_LEVEL: $KILLRVIDEO_LOGGING_LEVEL

  # The sample data generator
  generator:
    image: killrvideo/killrvideo-generator:1.2.5
    depends_on:
    - dse
    - etcd
    environment:
      KILLRVIDEO_ETCD: "etcd:2379"
      KILLRVIDEO_DSE_USERNAME: $KILLRVIDEO_DSE_USERNAME
      KILLRVIDEO_DSE_PASSWORD: $KILLRVIDEO_DSE_PASSWORD
      NODE_ENV: $NODE_ENV
      KILLRVIDEO_CASSANDRA_REPLICATION: $KILLRVIDEO_CASSANDRA_REPLICATION
      KILLRVIDEO_LOGGING_LEVEL: $KILLRVIDEO_LOGGING_LEVEL
    
  # DataStax Enterprise
  # configure this as the seed node
  # start with search and graph modes enabled ("-s -g")
  dse:
    image: store/datastax/dse-server:5.1.5
    command: [ -s -g ]
    ports:
    - "9042:9042"
    - "8983:8983"
    - "8182:8182"
    links:
    - opscenter
    environment:
      DS_LICENSE: accept
      NUM_TOKENS: 32
    # Allow DSE to lock memory with mlock
    cap_add:
    - IPC_LOCK
    ulimits:
      memlock: -1

  #dse_node_2:
  #  image: store/datastax/dse-server:5.1.5
  #  command: [ -s -g ]
  #  links:
  #  - opscenter
  #  environment:
  #    DS_LICENSE: accept
  #    SEEDS: dse
  #    NUM_TOKENS: 32
  #  links:
  #    - dse
  #  # Allow DSE to lock memory with mlock
  #  cap_add:
  #  - IPC_LOCK
  #  ulimits:
  #    memlock: -1

  # Container to load KillrVideo schema and search config into DSE
  # Provides options to configure secure users as well
  dse-config:
    image: killrvideo/killrvideo-dse-config:1.1.1
    environment:
      KILLRVIDEO_DOCKER_IP: $KILLRVIDEO_DOCKER_IP
      KILLRVIDEO_DSE_EXTERNAL_IP: $KILLRVIDEO_DSE_EXTERNAL_IP
      KILLRVIDEO_CASSANDRA_REPLICATION: $KILLRVIDEO_CASSANDRA_REPLICATION
      KILLRVIDEO_GRAPH_REPLICATION: $KILLRVIDEO_GRAPH_REPLICATION
    depends_on:
    - dse

  # One instance of DataStax Studio
  studio:
    #image: killrvideo/killrvideo-studio:2.0.0
    image: datastax-docker-images.jfrog.io/datastax/dse-studio:6.0.0-eap2
    ports:
    # The Web UI exposed to our host
    - "9091:9091"
    links:
    - dse
    depends_on:
    - dse
    environment:
      SERVICE_9091_NAME: studio
      DS_LICENSE: accept

  # OpsCenter
  opscenter:
    #image: datastax-docker-images.jfrog.io/datastax/dse-opscenter:6.5.0-eap2
    #image: datastax/datastax-enterprise-opscenter:6.1.3
    image: datastax/dse-opscenter
    ports:
    - "8888:8888"
    environment:
      SERVICE_8888_NAME: opscenter
      DS_LICENSE: accept
